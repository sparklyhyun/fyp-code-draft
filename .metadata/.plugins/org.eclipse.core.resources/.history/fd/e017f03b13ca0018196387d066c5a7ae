package fyp_algo;
import java.util.Random;

import fyp_algo.Constants.*;

public class Containers {
	//type of container (loading or unloading)
	private String cType; //randomly choose between loading or unloading 
	/*
	private CONTROL_PTS cPickUp; //container position, which pick up location
	private CONTROL_PTS cDropOff;	//which drop off location
	*/
	
	private int pickUpx;
	private int pickUpy;
	private int dropOffx;
	private int dropOffy;
	
	private int cIndex;
	
	public Containers(int cIndex){
		//assign index (priority?)
		this.cIndex = cIndex;
		
		//randomly choose container type
		this.cType = Constants.LOADTYPE[new Random().nextInt(Constants.LOADTYPE.length)];
		
		//randomly generate drop off & pick up
		if(this.cType.equals("loading")){
			//if loading - pickup : yc1, 2, 3, 4, dropoff: qc_load
			//if unloading - pickup: qc_unload, dropoff: yc1, 2, 3, 4
			init_pickUp(true);
			init_dropOff(true);
		}else{
			init_pickUp(false);
			init_dropOff(false);
		}
	}
	
	private void init_pickUp(boolean loading){
		//YC1, 2, 3, 4, QC_UNLOAD, randomly generate 
		//if loading, do not pick up from unload qc
		if(loading == false){
			this.pickUpx = 0;
			this.pickUpy = 0;
		}else{
			this.pickUpy = 1;
			Random rand = null; 
			int randomPos = rand.nextInt(4);
			switch(randomPos){
			case 0: this.pickUpx = 0;
			case 1: this.pickUpx = 1;
			case 2: this.pickUpx = 2;
			case 3: this.pickUpx = 3;
			default: this.pickUpx = 0;
			}
		}
	}
	
	private void init_dropOff(boolean loading){
		//YC1, 2, 3, 4, QC_LOAD, randomly generate 
		if(loading == true){
			this.dropOffx = 2;
			this.dropOffy = 0;
		}else{
			this.dropOffy = 1;
			Random rand = null; 
			int randomPos = rand.nextInt(4);
			switch(randomPos){
			case 0: this.dropOffx = 0;
			case 1: this.dropOffx = 1;
			case 2: this.dropOffx = 2;
			case 3: this.dropOffx = 3;
			default: this.dropOffx = 0;
			}
			}
		}
	
	public int getIndex(){
		return cIndex; 
	}
	
	public CONTROL_PTS getPickUp(){
		return cPickUp;
	}
		
	public CONTROL_PTS getDropOff(){
		return cDropOff;
	}	
	
	public boolean isTopRow(){
		if((this.cPickUp == CONTROL_PTS.QC_LOAD) || (this.cPickUp ==  CONTROL_PTS.QC_UNLOAD)){
			return true;
		}else{
			return false;
		}
	}

}
